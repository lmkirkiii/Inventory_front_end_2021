{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lawrencekirk/Project1Inventory/ProductNative/2ndtry/mernn-todo-boilerplate/client/components/ProductFormUpdate.js\";\nimport React, { useState } from \"react\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nfunction ProductFormUpdate(props) {\n  var tierID = props.tier_ID;\n  var product_quantity = props.quantity;\n  var product_name = props.name;\n  var product_id = props.product_ID;\n  var product_quantity_string = product_quantity.toString();\n\n  var _useState = useState(product_name),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputNameState = _useState2[0],\n      setInputName = _useState2[1];\n\n  var _useState3 = useState(product_quantity_string),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputQuantityState = _useState4[0],\n      setInputQuantity = _useState4[1];\n\n  var _useState5 = useState(\"low\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pickerState = _useState6[0],\n      setPickerValue = _useState6[1];\n\n  function handleSubmit() {\n    var newProduct;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (inputNameState && pickerState && inputQuantityState) {\n              newProduct = {\n                tier_id: tierID,\n                product_name: inputNameState,\n                product_quantity: inputQuantityState.toString()\n              };\n              fetch(\"http://localhost:4001/products/update/\" + product_id, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\"\n                },\n                body: JSON.stringify(newProduct)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                if (res) {\n                  Alert.alert(res.products);\n                  props.navigation.goBack();\n                }\n              }).catch(console.log);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }, React.createElement(TextInput, {\n    autoFocus: true,\n    style: {\n      borderWidth: 1,\n      borderColor: \"#5ce0e9\",\n      borderTopColor: \"white\",\n      color: \"black\",\n      fontSize: 50,\n      marginTop: 10,\n      paddingLeft: 10\n    },\n    value: inputNameState,\n    onChangeText: function onChangeText(text) {\n      return setInputName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }), React.createElement(TextInput, {\n    autoFocus: true,\n    style: {\n      borderWidth: 1,\n      borderColor: \"#5ce0e9\",\n      borderTopColor: \"white\",\n      color: \"black\",\n      fontSize: 50,\n      marginTop: 10,\n      paddingLeft: 10\n    },\n    value: inputQuantityState,\n    onChangeText: function onChangeText(text) {\n      return setInputQuantity(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit,\n    style: {\n      borderRadius: 10,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: 30,\n      backgroundColor: \"#25aae1\",\n      padding: 5,\n      height: 40,\n      width: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontWeight: \"800\",\n      padding: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    }\n  }, \"Submit\")));\n}\n\nexport default ProductFormUpdate;","map":{"version":3,"sources":["/Users/lawrencekirk/Project1Inventory/ProductNative/2ndtry/mernn-todo-boilerplate/client/components/ProductFormUpdate.js"],"names":["React","useState","ProductFormUpdate","props","tierID","tier_ID","product_quantity","quantity","product_name","name","product_id","product_ID","product_quantity_string","toString","inputNameState","setInputName","inputQuantityState","setInputQuantity","pickerState","setPickerValue","handleSubmit","newProduct","tier_id","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","Alert","alert","products","navigation","goBack","catch","console","log","borderWidth","borderColor","borderTopColor","color","fontSize","marginTop","paddingLeft","text","borderRadius","marginLeft","marginRight","backgroundColor","padding","height","width","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Picker,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  View,\n  Alert\n} from \"react-native\";\n\nfunction ProductFormUpdate(props) {\n  const tierID = props.tier_ID\n  const product_quantity = props.quantity\n  const product_name = props.name\n  const product_id = props.product_ID\n  const product_quantity_string = product_quantity.toString()\n\n  const [inputNameState, setInputName] = useState(product_name);\n  const [inputQuantityState, setInputQuantity] = useState(product_quantity_string);\n\n\n  const [pickerState, setPickerValue] = useState(\"low\");\n\n  async function handleSubmit() {\n\n\n    if (inputNameState && pickerState && inputQuantityState) {\n      const newProduct = {\n        tier_id: tierID,\n        product_name: inputNameState,\n        product_quantity: inputQuantityState.toString()\n\n      };\n      fetch(\"http://localhost:4001/products/update/\" + product_id , {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(newProduct)\n      })\n        .then(res => res.json())\n        .then(res => {\n            \n          if (res) {\n            Alert.alert(res.products);\n            props.navigation.goBack();\n          }\n        })\n        .catch(console.log);\n    }\n  }\n\n  return (\n    <View>\n      <TextInput\n        autoFocus\n        style={{\n          borderWidth: 1,\n          borderColor: \"#5ce0e9\",\n          borderTopColor: \"white\",\n          color: \"black\",\n          fontSize: 50,\n          marginTop: 10,\n          paddingLeft: 10\n        }}\n        value={inputNameState}\n        onChangeText={text => setInputName(text)}\n      />\n       <TextInput\n        autoFocus\n        style={{\n          borderWidth: 1,\n          borderColor: \"#5ce0e9\",\n          borderTopColor: \"white\",\n          color: \"black\",\n          fontSize: 50,\n          marginTop: 10,\n          paddingLeft: 10\n        }}\n        value={inputQuantityState}\n        onChangeText={text => setInputQuantity(text)}\n      />\n      <TouchableOpacity\n        onPress={handleSubmit}\n        style={{\n          borderRadius: 10,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: 30,\n          backgroundColor: \"#25aae1\",\n          padding: 5,\n          height: 40,\n          width: 80\n        }}\n      >\n        <Text style={{ color: \"white\", fontWeight: \"800\", padding: 5 }}>\n          Submit\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default ProductFormUpdate;"]},"metadata":{},"sourceType":"module"}