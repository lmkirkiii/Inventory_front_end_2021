{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lawrencekirk/Project1Inventory/ProductNative/2ndtry/mernn-todo-boilerplate/client/components/TierForm.js\";\nimport React, { useState } from \"react\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nfunction TierForm(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputState = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(\"low\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickerState = _useState4[0],\n      setPickerValue = _useState4[1];\n\n  function handleSubmit() {\n    var newTier;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (inputState && pickerState) {\n              newTier = {\n                tier_name: inputState\n              };\n              console.log(newTier);\n              fetch(\"http://localhost:4001/tiers/add\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\"\n                },\n                body: JSON.stringify(newTier)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                if (res) {\n                  Alert.alert(res.tiers);\n                  props.navigation.goBack();\n                }\n              }).catch(console.log);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }, React.createElement(TextInput, {\n    autoFocus: true,\n    placeholder: \"Add Tier Here\",\n    style: {\n      borderWidth: 1,\n      borderColor: \"black\",\n      borderTopColor: \"white\",\n      color: \"black\",\n      fontSize: 40,\n      marginTop: 30,\n      paddingLeft: 10\n    },\n    value: inputState,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit,\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingVertical: 12,\n      paddingHorizontal: 15,\n      borderRadius: 4,\n      elevation: 3,\n      margin: 20,\n      backgroundColor: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      lineHeight: 21,\n      fontWeight: 'bold',\n      letterSpacing: 0.25,\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }, \"Submit\")));\n}\n\nexport default TierForm;","map":{"version":3,"sources":["/Users/lawrencekirk/Project1Inventory/ProductNative/2ndtry/mernn-todo-boilerplate/client/components/TierForm.js"],"names":["React","useState","TierForm","props","inputState","setInput","pickerState","setPickerValue","handleSubmit","newTier","tier_name","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","Alert","alert","tiers","navigation","goBack","catch","borderWidth","borderColor","borderTopColor","color","fontSize","marginTop","paddingLeft","text","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","margin","backgroundColor","lineHeight","fontWeight","letterSpacing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAUA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACQF,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MAChBG,UADgB;AAAA,MACJC,QADI;;AAAA,mBAEeJ,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,MAEhBK,WAFgB;AAAA,MAEHC,cAFG;;AAIvB,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,gBAAIJ,UAAU,IAAIE,WAAlB,EAA+B;AACvBG,cAAAA,OADuB,GACb;AACdC,gBAAAA,SAAS,EAAEN;AADG,eADa;AAI7BO,cAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAI,cAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,gBAAAA,MAAM,EAAE,MAD+B;AAEvCC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEPC,kBAAAA,MAAM,EAAE;AAFD,iBAF8B;AAMvCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf;AANiC,eAApC,CAAL,CAQGW,IARH,CAQQ,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eARX,EASGF,IATH,CASQ,UAAAC,GAAG,EAAI;AAEX,oBAAIA,GAAJ,EAAS;AACPE,kBAAAA,KAAK,CAACC,KAAN,CAAYH,GAAG,CAACI,KAAhB;AACAtB,kBAAAA,KAAK,CAACuB,UAAN,CAAiBC,MAAjB;AACD;AACF,eAfH,EAgBGC,KAhBH,CAgBSjB,OAAO,CAACC,GAhBjB;AAiBD;;AAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,KAAK,EAAE;AACLiB,MAAAA,WAAW,EAAE,CADR;AAELC,MAAAA,WAAW,EAAE,OAFR;AAGLC,MAAAA,cAAc,EAAE,OAHX;AAILC,MAAAA,KAAK,EAAE,OAJF;AAKLC,MAAAA,QAAQ,EAAE,EALL;AAMLC,MAAAA,SAAS,EAAE,EANN;AAOLC,MAAAA,WAAW,EAAE;AAPR,KAHT;AAYE,IAAA,KAAK,EAAE/B,UAZT;AAaE,IAAA,YAAY,EAAE,sBAAAgC,IAAI;AAAA,aAAI/B,QAAQ,CAAC+B,IAAD,CAAZ;AAAA,KAbpB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE5B,YADX;AAEE,IAAA,KAAK,EAAE;AACL6B,MAAAA,UAAU,EAAE,QADP;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,eAAe,EAAE,EAHZ;AAILC,MAAAA,iBAAiB,EAAE,EAJd;AAKLC,MAAAA,YAAY,EAAE,CALT;AAMLC,MAAAA,SAAS,EAAE,CANN;AAOLC,MAAAA,MAAM,EAAE,EAPH;AAQLC,MAAAA,eAAe,EAAE;AARZ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACXX,MAAAA,QAAQ,EAAE,EADC;AAEXY,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,UAAU,EAAE,MAHD;AAIXC,MAAAA,aAAa,EAAE,IAJJ;AAKXf,MAAAA,KAAK,EAAE;AALI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CAhBF,CADF;AA0CD;;AAED,eAAe9B,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Picker,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  View,\n  Alert\n} from \"react-native\";\n\nfunction TierForm(props) {\n  const [inputState, setInput] = useState(\"\");\n  const [pickerState, setPickerValue] = useState(\"low\");\n\n  async function handleSubmit() {\n    if (inputState && pickerState) {\n      const newTier = {\n        tier_name: inputState,\n      };\n      console.log(newTier)\n      fetch(\"http://localhost:4001/tiers/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(newTier)\n      })\n        .then(res => res.json())\n        .then(res => {\n            \n          if (res) {\n            Alert.alert(res.tiers);\n            props.navigation.goBack();\n          }\n        })\n        .catch(console.log);\n    }\n  }\n\n  return (\n    <View>\n      <TextInput\n        autoFocus\n        placeholder=\"Add Tier Here\"\n        style={{\n          borderWidth: 1,\n          borderColor: \"black\",\n          borderTopColor: \"white\",\n          color: \"black\",\n          fontSize: 40,\n          marginTop: 30,\n          paddingLeft: 10\n        }}\n        value={inputState}\n        onChangeText={text => setInput(text)}\n      />\n      <TouchableOpacity\n        onPress={handleSubmit}\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: 12,\n          paddingHorizontal: 15,\n          borderRadius: 4,\n          elevation: 3,\n          margin: 20,\n          backgroundColor: 'black',\n        }}\n      >\n        <Text style={{ \n          fontSize: 16,\n          lineHeight: 21,\n          fontWeight: 'bold',\n          letterSpacing: 0.25,\n          color: 'white',\n           }}>\n          Submit\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default TierForm;\n"]},"metadata":{},"sourceType":"module"}