{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lawrencekirk/Project1Inventory/ProductNative/2ndtry/mernn-todo-boilerplate/client/components/ProductForm.js\";\nimport React, { useState } from \"react\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nfunction ProductForm(props) {\n  var tierID = props.tier_ID;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputNameState = _useState2[0],\n      setInputName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputQuantityState = _useState4[0],\n      setInputQuantity = _useState4[1];\n\n  var _useState5 = useState(\"low\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pickerState = _useState6[0],\n      setPickerValue = _useState6[1];\n\n  function handleSubmit() {\n    var newProduct;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(inputNameState);\n            console.log(inputQuantityState);\n\n            if (inputNameState && pickerState && inputQuantityState) {\n              newProduct = {\n                tier_id: tierID,\n                product_name: inputNameState,\n                product_quantity: inputQuantityState\n              };\n              fetch(\"http://localhost:4001/products/add\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\"\n                },\n                body: JSON.stringify(newProduct)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                if (res) {\n                  Alert.alert(\"Product has been added\");\n                  props.navigation.goBack();\n                }\n              }).catch(console.log);\n            }\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Add Product Name Here\",\n    autoFocus: true,\n    style: {\n      borderWidth: 1,\n      borderColor: \"#5ce0e9\",\n      borderTopColor: \"white\",\n      color: \"black\",\n      fontSize: 40,\n      marginTop: 30,\n      paddingLeft: 10\n    },\n    value: inputNameState,\n    onChangeText: function onChangeText(text) {\n      return setInputName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Add Product Quantity\",\n    autoFocus: true,\n    style: {\n      borderWidth: 1,\n      borderColor: \"black\",\n      borderTopColor: \"white\",\n      color: \"black\",\n      fontSize: 40,\n      marginTop: 30,\n      paddingLeft: 10\n    },\n    value: inputQuantityState,\n    onChangeText: function onChangeText(text) {\n      return setInputQuantity(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit,\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingVertical: 12,\n      paddingHorizontal: 15,\n      borderRadius: 4,\n      elevation: 3,\n      margin: 20,\n      backgroundColor: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      lineHeight: 21,\n      fontWeight: 'bold',\n      letterSpacing: 0.25,\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    }\n  }, \"Submit\")));\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["/Users/lawrencekirk/Project1Inventory/ProductNative/2ndtry/mernn-todo-boilerplate/client/components/ProductForm.js"],"names":["React","useState","ProductForm","props","tierID","tier_ID","inputNameState","setInputName","inputQuantityState","setInputQuantity","pickerState","setPickerValue","handleSubmit","console","log","newProduct","tier_id","product_name","product_quantity","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","Alert","alert","navigation","goBack","catch","borderWidth","borderColor","borderTopColor","color","fontSize","marginTop","paddingLeft","text","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","margin","backgroundColor","lineHeight","fontWeight","letterSpacing"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Picker,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  View,\n  Alert\n} from \"react-native\";\n\nfunction ProductForm(props) {\n\n  const tierID = props.tier_ID\n  \n  const [inputNameState, setInputName] = useState(\"\");\n  const [inputQuantityState, setInputQuantity] = useState(\"\");\n\n\n  const [pickerState, setPickerValue] = useState(\"low\");\n\n  async function handleSubmit() {\n    console.log(inputNameState)\n    console.log(inputQuantityState)\n\n    if (inputNameState && pickerState && inputQuantityState) {\n      const newProduct = {\n        tier_id: tierID,\n        product_name: inputNameState,\n        product_quantity: inputQuantityState\n\n      };\n \n      fetch(\"http://localhost:4001/products/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(newProduct)\n      })\n        .then(res => res.json())\n        .then(res => {\n            \n          if (res) {\n            Alert.alert(\"Product has been added\");\n\n            props.navigation.goBack();\n          }\n        })\n        .catch(console.log);\n    }\n  }\n\n  return (\n    <View>\n      <TextInput\n        placeholder=\"Add Product Name Here\"\n        autoFocus\n        style={{\n          borderWidth: 1,\n          borderColor: \"#5ce0e9\",\n          borderTopColor: \"white\",\n          color: \"black\",\n          fontSize: 40,\n          marginTop: 30,\n          paddingLeft: 10\n        }}\n        value={inputNameState}\n        onChangeText={text => setInputName(text)}\n      />\n       <TextInput\n        placeholder=\"Add Product Quantity\"\n        autoFocus\n        style={{\n          borderWidth: 1,\n          borderColor: \"black\",\n          borderTopColor: \"white\",\n          color: \"black\",\n          fontSize: 40,\n          marginTop: 30,\n          paddingLeft: 10\n        }}\n        value={inputQuantityState}\n        onChangeText={text => setInputQuantity(text)}\n      />\n      <TouchableOpacity\n        onPress={handleSubmit}\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: 12,\n          paddingHorizontal: 15,\n          borderRadius: 4,\n          elevation: 3,\n          margin: 20,\n          backgroundColor: 'black',\n        }}\n      >\n        <Text style={{ \n          fontSize: 16,\n          lineHeight: 21,\n          fontWeight: 'bold',\n          letterSpacing: 0.25,\n          color: 'white',\n           }}>\n          Submit\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}